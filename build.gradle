plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.1'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.hibernate.orm' version '6.6.5.Final'
    id 'org.graalvm.buildtools.native' version '0.10.4'
    id 'org.springframework.cloud.contract' version '4.2.0'
    id 'com.gorylenko.gradle-git-properties' version '2.4.2'
}

group = 'br.com.fechaki'
version = '0.3.0-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(22)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('mapstructVersion', "1.6.3")
    set('lombokMapstructBindingVersion', "0.2.0")
    set('springdocVersion', "2.8.3")
    set('awsSdkVersion', "2.26.25")
}

springBoot {
    buildInfo()
}

dependencies {
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-api:${springdocVersion}"
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springdocVersion}"
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    implementation "software.amazon.awssdk:sns:${awsSdkVersion}"
    implementation 'org.liquibase:liquibase-core'

    compileOnly 'org.projectlombok:lombok'

    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    runtimeOnly 'org.postgresql:postgresql'

    annotationProcessor "org.projectlombok:lombok-mapstruct-binding:${lombokMapstructBindingVersion}"
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    annotationProcessor 'org.projectlombok:lombok'

    testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.amqp:spring-rabbit-test'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:postgresql'
    testImplementation 'org.testcontainers:rabbitmq'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}


gitProperties {
    keys = [
            'git.branch',
            'git.commit.id',
            'git.commit.user.email',
            'git.commit.user.name',
            'git.commit.time',
            'git.build.version',
            'git.tags'
    ]
}

compileJava {
    options.compilerArgs += [
        '-Amapstruct.defaultComponentModel=default',
        '-Amapstruct.unmappedTargetPolicy=IGNORE'
    ]
}

tasks.named('test') {
    useJUnitPlatform()
}
